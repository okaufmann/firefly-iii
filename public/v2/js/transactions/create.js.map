{"version":3,"sources":["webpack:///src/components/transactions/Create.vue","webpack:///./src/components/transactions/Create.vue?0a62","webpack:///./src/components/transactions/Create.vue","webpack:///./src/components/transactions/Create.vue?8d0e","webpack:///./src/pages/transactions/create.js"],"names":["name","components","SplitForm","Alert","SplitPills","TransactionGroupTitle","created","this","getAllowedOpposingTypes","getAccountToTransaction","getCustomFields","addTransaction","data","errorMessage","successMessage","customFields","enableSubmit","createAnother","resetFormAfter","submittedTransaction","submittedLinks","submittedAttachments","inError","submittedAttCount","groupTitleErrors","returnedGroupId","returnedGroupTitle","accountToTransaction","allowedOpposingTypes","defaultSourceAllowedTypes","defaultDestinationAllowedTypes","sourceAllowedTypes","destinationAllowedTypes","date","Date","time","computed","watch","finalizeSubmit","methods","removeTransaction","$store","commit","payload","window","location","href","$t","transactions","hasOwnProperty","i","test","updateField","resetTransactions","setTimeout","submitTransaction","axios","post","submitAttachments","result","uploadedAttachment","key","length","storeLocation","storeAccountValue","calculateTransactionType","index","storeField","storeDate","storeTime","storeGroupTitle","setGroupTitle","source","dest","setTransactionType","expectedDestinationTypes","transactionType","submitTransactionLinks","submitted","links","ii","total","currentLink","outward_id","received","transaction_journal_id","inward_id","promises","push","then","Promise","all","parseErrors","resetErrors","errors","message","transactionIndex","parseInt","split","fieldName","setTransactionError","convertData","groupTitle","group_title","convertSplit","description","synchronizeAccounts","source_name","destination_name","source_id","destination_id","switchAccounts","theDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","dateStr","array","type","currency_id","amount","budget_id","category_name","category","tags","interest_date","book_date","process_date","due_date","payment_date","invoice_date","internal_reference","external_url","notes","external_id","zoom_level","longitude","latitude","order","reconciled","piggy_bank_id","currentSplit","bill_id","foreign_currency_id","foreign_amount","toLowerCase","firstSource","source_account_type","firstDestination","destination_account_type","source_account_currency_id","includes","destination_account_currency_id","link_type_id","linkTypeParts","inwardId","outwardId","newLink","get","setDestinationAllowedTypes","value","setSourceAllowedTypes","_vm","_h","$createElement","_c","_self","attrs","_v","staticClass","_l","transaction","on","$event","model","callback","$$v","$set","expression","_e","_s","directives","rawName","domProps","Array","isArray","_i","$$a","$$el","target","$$c","checked","$$i","concat","slice","require","Vue","config","productionTip","i18n","props","store","render","createElement","Create","beforeCreate","dispatch","$mount"],"mappings":"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","file":"/public/js/transactions/create.js","sourcesContent":["<!--\n  - Create.vue\n  - Copyright (c) 2020 james@firefly-iii.org\n  -\n  - This file is part of Firefly III (https://github.com/firefly-iii).\n  -\n  - This program is free software: you can redistribute it and/or modify\n  - it under the terms of the GNU Affero General Public License as\n  - published by the Free Software Foundation, either version 3 of the\n  - License, or (at your option) any later version.\n  -\n  - This program is distributed in the hope that it will be useful,\n  - but WITHOUT ANY WARRANTY; without even the implied warranty of\n  - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  - GNU Affero General Public License for more details.\n  -\n  - You should have received a copy of the GNU Affero General Public License\n  - along with this program.  If not, see <https://www.gnu.org/licenses/>.\n  -->\n\n<template>\n  <div>\n    <alert :message=\"errorMessage\" type=\"danger\"/>\n    <alert :message=\"successMessage\" type=\"success\"/>\n    <SplitPills :transactions=\"transactions\"/>\n    <div class=\"tab-content\">\n      <SplitForm\n          v-for=\"(transaction, index) in this.transactions\"\n          v-bind:key=\"index\"\n          :allowed-opposing-types=\"allowedOpposingTypes\"\n          :count=\"transactions.length\"\n          :custom-fields=\"customFields\"\n          :date=\"date\"\n          :destination-allowed-types=\"destinationAllowedTypes\"\n          :index=\"index\"\n          :source-allowed-types=\"sourceAllowedTypes\"\n          :submitted-transaction=\"submittedTransaction\"\n          :time=\"time\"\n          :transaction=\"transaction\"\n          :transaction-type=\"transactionType\"\n          v-on:uploaded-attachments=\"uploadedAttachment($event)\"\n          v-on:set-marker-location=\"storeLocation($event)\"\n          v-on:set-account=\"storeAccountValue($event)\"\n          v-on:switch-accounts=\"switchAccounts($event)\"\n          v-on:set-date=\"storeDate($event)\"\n          v-on:set-time=\"storeTime($event)\"\n          v-on:set-field=\"storeField($event)\"\n          v-on:remove-transaction=\"removeTransaction($event)\"\n          v-on:set-dest-types=\"setDestinationAllowedTypes($event)\"\n          v-on:set-src-types=\"setSourceAllowedTypes($event)\"\n\n      />\n    </div>\n\n    <div class=\"row\">\n      <!-- group title -->\n      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12\">\n        <div v-if=\"transactions.length > 1\" class=\"card\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <TransactionGroupTitle v-model=\"this.groupTitle\" :errors=\"this.groupTitleErrors\" v-on:set-group-title=\"storeGroupTitle($event)\"/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12\">\n        <!-- buttons -->\n        <div class=\"card card-primary\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <div class=\"text-xs d-none d-lg-block d-xl-block\">\n                  &nbsp;\n                </div>\n                <button class=\"btn btn-outline-primary btn-block\" @click=\"addTransaction\"><i class=\"far fa-clone\"></i> {{ $t('firefly.add_another_split') }}\n                </button>\n              </div>\n              <div class=\"col\">\n                <div class=\"text-xs d-none d-lg-block d-xl-block\">\n                  &nbsp;\n                </div>\n                <button :disabled=\"!enableSubmit\" class=\"btn btn-success btn-block\" @click=\"submitTransaction\">\n                  <span v-if=\"enableSubmit\"><i class=\"far fa-save\"></i> {{ $t('firefly.store_transaction') }}</span>\n                  <span v-if=\"!enableSubmit\"><i class=\"fas fa-spinner fa-spin\"></i></span>\n                </button>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col\">\n                &nbsp;\n              </div>\n              <div class=\"col\">\n                <div class=\"form-check\">\n                  <input id=\"createAnother\" v-model=\"createAnother\" class=\"form-check-input\" type=\"checkbox\">\n                  <label class=\"form-check-label\" for=\"createAnother\">\n                    <span class=\"small\">{{ $t('firefly.create_another') }}</span>\n                  </label>\n                </div>\n                <div class=\"form-check\">\n                  <input id=\"resetFormAfter\" v-model=\"resetFormAfter\" :disabled=\"!createAnother\" class=\"form-check-input\" type=\"checkbox\">\n                  <label class=\"form-check-label\" for=\"resetFormAfter\">\n                    <span class=\"small\">{{ $t('firefly.reset_after') }}</span>\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {createNamespacedHelpers} from 'vuex'\nimport Alert from '../partials/Alert';\nimport SplitPills from \"./SplitPills\";\nimport TransactionGroupTitle from \"./TransactionGroupTitle\";\nimport SplitForm from \"./SplitForm\";\nimport {toW3CString} from '../shared/transactions';\n\nconst {mapState, mapGetters, mapActions, mapMutations} = createNamespacedHelpers('transactions/create')\n\nexport default {\n  name: \"Create\",\n  components: {\n    SplitForm,\n    Alert,\n    SplitPills,\n    TransactionGroupTitle,\n  },\n  /**\n   * Grab some stuff from the API, add the first transaction.\n   */\n  created() {\n    this.getAllowedOpposingTypes();\n    this.getAccountToTransaction();\n    this.getCustomFields();\n    this.addTransaction();\n  },\n  data() {\n    return {\n      // error or success message\n      errorMessage: '',\n      successMessage: '',\n\n      // custom fields to show, useful for components:\n      customFields: {},\n\n      // states for the form (makes sense right)\n      enableSubmit: true,\n      createAnother: false,\n      resetFormAfter: false,\n\n      // things the process is done working on (3 phases):\n      submittedTransaction: false,\n      submittedLinks: false,\n      submittedAttachments: false,\n\n      // transaction was actually submitted?\n      inError: false,\n\n      // number of uploaded attachments\n      // its an object because we count per transaction journal (which can have multiple attachments)\n      // and array doesn't work right.\n      submittedAttCount: {},\n\n      // errors in the group title:\n      groupTitleErrors: [],\n\n      // group ID + title once submitted:\n      returnedGroupId: 0,\n      returnedGroupTitle: '',\n\n      // meta data for accounts\n      accountToTransaction: {},\n      allowedOpposingTypes: {},\n      defaultSourceAllowedTypes: ['Asset account', 'Loan', 'Debt', 'Mortgage', 'Revenue account'],\n      defaultDestinationAllowedTypes: ['Asset account', 'Loan', 'Debt', 'Mortgage', 'Expense account'],\n      sourceAllowedTypes: ['Asset account', 'Loan', 'Debt', 'Mortgage', 'Revenue account'],\n      destinationAllowedTypes: ['Asset account', 'Loan', 'Debt', 'Mortgage', 'Expense account'],\n\n      // date and time not in the store because it was buggy\n      date: new Date,\n      time: new Date,\n    }\n  },\n  computed: {\n    /**\n     * Grabbed from the store.\n     */\n    ...mapGetters([\n                    'transactionType',\n                    'transactions',\n                    'groupTitle'\n                  ])\n  },\n  watch: {\n    submittedTransaction: function () {\n      // see finalizeSubmit()\n      this.finalizeSubmit();\n    },\n    submittedLinks: function () {\n      // see finalizeSubmit()\n      this.finalizeSubmit();\n    },\n    submittedAttachments: function () {\n      // see finalizeSubmit()\n      this.finalizeSubmit();\n    }\n  },\n  methods: {\n    /**\n     * Store related mutators used by this component.\n     */\n    ...mapMutations(\n        [\n          'setGroupTitle',\n          'addTransaction',\n          'deleteTransaction',\n          'setTransactionError',\n          'setTransactionType',\n          'resetErrors',\n          'updateField',\n          'resetTransactions',\n        ],\n    ),\n    /**\n     * Removes a split from the array.\n     */\n    removeTransaction: function (payload) {\n      // console.log('Triggered to remove transaction ' + payload.index);\n      this.$store.commit('transactions/create/deleteTransaction', payload);\n    },\n    /**\n     * Submitting a transaction consists of 3 steps: submitting the transaction, uploading attachments\n     * and creating links. Only once all three steps are executed may the message be shown or the user be\n     * forwarded.\n     */\n    finalizeSubmit() {\n      // console.log('finalizeSubmit (' + this.submittedTransaction + ', ' + this.submittedAttachments + ', ' + this.submittedLinks + ')');\n      if (this.submittedTransaction && this.submittedAttachments && this.submittedLinks) {\n        // console.log('all true');\n        // console.log('createAnother = ' + this.createAnother);\n        // console.log('inError = ' + this.inError);\n        if (false === this.createAnother && false === this.inError) {\n          // console.log('redirect');\n          window.location.href = (window.previousURL ?? '/') + '?transaction_group_id=' + this.returnedGroupId + '&message=created';\n          return;\n        }\n\n        if (false === this.inError) {\n          // show message:\n          this.errorMessage = '';\n          this.successMessage = this.$t('firefly.transaction_stored_link', {ID: this.returnedGroupId, title: this.returnedGroupTitle});\n        }\n\n        // enable flags:\n        this.enableSubmit = true;\n        this.submittedTransaction = false;\n        this.submittedLinks = false;\n        this.submittedAttachments = false;\n        this.inError = false;\n\n\n        // reset attachments (always do this)\n        for (let i in this.transactions) {\n          if (this.transactions.hasOwnProperty(i) && /^0$|^[1-9]\\d*$/.test(i) && i <= 4294967294) {\n            if (this.transactions.hasOwnProperty(i)) {\n              // console.log('Reset attachment #' + i);\n              this.updateField({index: i, field: 'transaction_journal_id', value: 0});\n            }\n          }\n        }\n        this.submittedAttCount = [];\n\n        // reset the form:\n        if (this.resetFormAfter) {\n          this.resetTransactions();\n          // do a short time out?\n          setTimeout(() => this.addTransaction(), 50);\n        }\n        // console.log('Done with finalizeSubmit!');\n        // return;\n      }\n      // console.log('Did nothing in finalizeSubmit');\n    },\n    /**\n     * Actually submit the transaction to Firefly III. This is a fairly complex beast of a thing because multiple things\n     * need to happen in the right order.\n     */\n    submitTransaction: function () {\n      // console.log('submitTransaction()');\n      // disable the submit button:\n      this.enableSubmit = false;\n\n      // convert the data so its ready to be submitted:\n      const url = './api/v1/transactions';\n      const data = this.convertData();\n\n      // console.log('Will submit:');\n      // console.log(data);\n\n      // POST the transaction.\n      axios.post(url, data)\n          .then(response => {\n            // console.log('Response is OK!');\n            // report the transaction is submitted.\n            this.submittedTransaction = true;\n\n            // submit links and attachments (can only be done when the transaction is created)\n            this.submitTransactionLinks(data, response);\n            this.submitAttachments(data, response);\n\n            // meanwhile, store the ID and the title in some easy to access variables.\n            this.returnedGroupId = parseInt(response.data.data.id);\n            this.returnedGroupTitle = null === response.data.data.attributes.group_title ? response.data.data.attributes.transactions[0].description : response.data.data.attributes.group_title;\n            // console.log('Group title is now \"' + this.groupTitle + '\"');\n          })\n          .catch(error => {\n            // oh noes Firefly III has something to bitch about.\n            this.enableSubmit = true;\n            // console.log('enable submit = true');\n            // report the transaction is submitted.\n            this.submittedTransaction = true;\n            // also report attachments and links are submitted:\n            this.submittedAttachments = true;\n            this.submittedLinks = true;\n\n            // but report an error because error:\n            this.inError = true;\n            this.parseErrors(error.response.data);\n          });\n    },\n\n    /**\n     * Submitting transactions means we will give each TransactionAttachment component\n     * the ID of the transaction journal (so it works for multiple splits). Each component\n     * will then start uploading their transactions (so its a separated concern) and report\n     * back to the \"uploadedAttachment\" function below via an event emitter.\n     *\n     * The ID is set via the store.\n     */\n    submitAttachments: function (data, response) {\n      // console.log('submitAttachments()');\n      let result = response.data.data.attributes.transactions\n      for (let i in data.transactions) {\n        if (data.transactions.hasOwnProperty(i) && /^0$|^[1-9]\\d*$/.test(i) && i <= 4294967294) {\n          if (result.hasOwnProperty(i)) {\n            // console.log('updateField(' + i + ', transaction_journal_id, ' + result[i].transaction_journal_id + ')');\n            this.updateField({index: i, field: 'transaction_journal_id', value: result[i].transaction_journal_id});\n          }\n        }\n      }\n    },\n    /**\n     * When a attachment component is done uploading it ends up here. We create an object where we count how many\n     * attachment components have reported back they're done uploading. Of course if they have nothing to upload\n     * they will be pretty fast in reporting they're done.\n     *\n     * Once the number of components matches the number of splits we know all attachments have been uploaded.\n     */\n    uploadedAttachment: function (journalId) {\n      // console.log('Triggered uploadedAttachment(' + journalId + ')');\n      let key = 'str' + journalId;\n      this.submittedAttCount[key] = 1;\n      let count = Object.keys(this.submittedAttCount).length;\n      // console.log('Count is now ' + count);\n      // console.log('Length is ' + this.transactions.length);\n      if (count === this.transactions.length) {\n        // mark the attachments as stored:\n        this.submittedAttachments = true;\n        // console.log('Got them all!');\n      }\n    },\n    /**\n     * Responds to changed location.\n     */\n    storeLocation: function (payload) {\n      let zoomLevel = payload.hasMarker ? payload.zoomLevel : null;\n      let lat = payload.hasMarker ? payload.lat : null;\n      let lng = payload.hasMarker ? payload.lng : null;\n      this.updateField({index: payload.index, field: 'zoom_level', value: zoomLevel});\n      this.updateField({index: payload.index, field: 'latitude', value: lat});\n      this.updateField({index: payload.index, field: 'longitude', value: lng});\n    },\n    /**\n     * Responds to changed account.\n     */\n    storeAccountValue: function (payload) {\n      this.updateField({index: payload.index, field: payload.direction + '_account_id', value: payload.id});\n      this.updateField({index: payload.index, field: payload.direction + '_account_type', value: payload.type});\n      this.updateField({index: payload.index, field: payload.direction + '_account_name', value: payload.name});\n\n      this.updateField({index: payload.index, field: payload.direction + '_account_currency_id', value: payload.currency_id});\n      this.updateField({index: payload.index, field: payload.direction + '_account_currency_code', value: payload.currency_code});\n      this.updateField({index: payload.index, field: payload.direction + '_account_currency_symbol', value: payload.currency_symbol});\n\n      this.calculateTransactionType(payload.index);\n    },\n    storeField: function (payload) {\n      this.updateField(payload);\n    },\n    storeDate: function (payload) {\n      this.date = payload.date;\n    },\n    storeTime: function (payload) {\n      this.time = payload.time;\n    },\n    storeGroupTitle: function (value) {\n      // console.log('set group title: ' + value);\n      this.setGroupTitle({groupTitle: value});\n    },\n\n    /**\n     * Calculate the transaction type based on what's currently in the store.\n     */\n    calculateTransactionType: function (index) {\n      //console.log('calculateTransactionType(' + index + ')');\n      if (0 === index) {\n        let source = this.transactions[0].source_account_type;\n        let dest = this.transactions[0].destination_account_type;\n        if (null === source || null === dest) {\n          //console.log('transactionType any');\n          this.setTransactionType('any');\n          //this.$store.commit('setTransactionType', 'any');\n          //console.log('calculateTransactionType: either type is NULL so no dice.');\n          return;\n        }\n        if ('' === source || '' === dest) {\n          //console.log('transactionType any');\n          this.setTransactionType('any');\n          //this.$store.commit('setTransactionType', 'any');\n          //console.log('calculateTransactionType: either type is empty so no dice.');\n          return;\n        }\n        // ok so type is set on both:\n        let expectedDestinationTypes = this.accountToTransaction[source];\n        if ('undefined' !== typeof expectedDestinationTypes) {\n          let transactionType = expectedDestinationTypes[dest];\n          if ('undefined' !== typeof expectedDestinationTypes[dest]) {\n            //console.log('Found a type: ' + transactionType);\n            this.setTransactionType(transactionType);\n            //this.$store.commit('setTransactionType', transactionType);\n            //console.log('calculateTransactionType: ' + source + ' --> ' + dest + ' = ' + transactionType);\n            return;\n          }\n        }\n        //console.log('Found no type for ' + source + ' --> ' + dest);\n        if ('Asset account' !== source) {\n          //console.log('Drop ID from destination.');\n          this.updateField({index: 0, field: 'destination_account_id', value: null});\n          //console.log('calculateTransactionType: drop ID from destination.');\n          // source.id =null\n          // context.commit('updateField', {field: 'source_account',index: })\n          // context.state.transactions[0].source_account.id = null;\n        }\n        if ('Asset account' !== dest) {\n          //console.log('Drop ID from source.');\n          this.updateField({index: 0, field: 'source_account_id', value: null});\n          //console.log('calculateTransactionType: drop ID from source.');\n          //context.state.transactions[0].destination_account.id = null;\n        }\n        //console.log('calculateTransactionType: fallback, type to any.');\n        this.setTransactionType('any');\n        //this.$store.commit('setTransactionType', 'any');\n      }\n    },\n    /**\n     * Submit transaction links.\n     */\n    submitTransactionLinks(data, response) {\n      //console.log('submitTransactionLinks()');\n      let promises = [];\n      let result = response.data.data.attributes.transactions;\n      let total = 0;\n      for (let i in data.transactions) {\n        if (data.transactions.hasOwnProperty(i) && /^0$|^[1-9]\\d*$/.test(i) && i <= 4294967294) {\n          let submitted = data.transactions[i];\n          if (result.hasOwnProperty(i)) {\n            // found matching created transaction.\n            let received = result[i];\n            // grab ID from received, loop \"submitted\" transaction links\n            for (let ii in submitted.links) {\n              if (submitted.links.hasOwnProperty(ii) && /^0$|^[1-9]\\d*$/.test(ii) && ii <= 4294967294) {\n                let currentLink = submitted.links[ii];\n                total++;\n                if (0 === currentLink.outward_id) {\n                  currentLink.outward_id = received.transaction_journal_id;\n                }\n                if (0 === currentLink.inward_id) {\n                  currentLink.inward_id = received.transaction_journal_id;\n                }\n                // submit transaction link:\n                promises.push(axios.post('./api/v1/transaction_links', currentLink).then(response => {\n                  // TODO error handling.\n                }));\n              }\n            }\n          }\n        }\n      }\n      if (0 === total) {\n        this.submittedLinks = true;\n        return;\n      }\n      Promise.all(promises).then(function () {\n        this.submittedLinks = true;\n      });\n    },\n\n    parseErrors: function (errors) {\n      for (let i in this.transactions) {\n        this.resetErrors({index: i});\n      }\n      this.successMessage = '';\n      this.errorMessage = this.$t('firefly.errors_submission');\n      if (typeof errors.errors === 'undefined') {\n        this.successMessage = '';\n        this.errorMessage = errors.message;\n      }\n\n      let payload;\n      //payload = {index: 0, field: 'description', errors: ['Test error index 0']};\n      //this.setTransactionError(payload);\n\n      //payload = {index: 1, field: 'description', errors: ['Test error index 1']};\n      //this.setTransactionError(payload);\n\n      let transactionIndex;\n      let fieldName;\n\n      // fairly basic way of exploding the error array.\n      for (const key in errors.errors) {\n        // console.log('Error index: \"' + key + '\"');\n        if (errors.errors.hasOwnProperty(key)) {\n          if (key === 'group_title') {\n            this.groupTitleErrors = errors.errors[key];\n            continue;\n          }\n          if (key !== 'group_title') {\n            // lol dumbest way to explode \"transactions.0.something\" ever.\n            transactionIndex = parseInt(key.split('.')[1]);\n\n            fieldName = key.split('.')[2];\n\n            // set error in this object thing.\n            // console.log('The errors in key \"' + key + '\" are');\n            // console.log(errors.errors[key]);\n            switch (fieldName) {\n              case 'amount':\n              case 'description':\n              case 'date':\n              case 'tags':\n                payload = {index: transactionIndex, field: fieldName, errors: errors.errors[key]};\n                this.setTransactionError(payload);\n                break;\n              case 'budget_id':\n                payload = {index: transactionIndex, field: 'budget', errors: errors.errors[key]};\n                this.setTransactionError(payload);\n                break;\n              case 'bill_id':\n                payload = {index: transactionIndex, field: 'bill', errors: errors.errors[key]};\n                this.setTransactionError(payload);\n                break;\n              case 'piggy_bank_id':\n                payload = {index: transactionIndex, field: 'piggy_bank', errors: errors.errors[key]};\n                this.setTransactionError(payload);\n                break;\n              case 'category_name':\n                payload = {index: transactionIndex, field: 'category', errors: errors.errors[key]};\n                this.setTransactionError(payload);\n                break;\n              case 'source_name':\n              case 'source_id':\n                payload = {index: transactionIndex, field: 'source', errors: errors.errors[key]};\n                this.setTransactionError(payload);\n                break;\n              case 'destination_name':\n              case 'destination_id':\n                payload = {index: transactionIndex, field: 'destination', errors: errors.errors[key]};\n                this.setTransactionError(payload);\n                break;\n              case 'foreign_amount':\n              case 'foreign_currency':\n                payload = {index: transactionIndex, field: 'foreign_amount', errors: errors.errors[key]};\n                this.setTransactionError(payload);\n                break;\n            }\n          }\n          // unique some things\n          if (typeof this.transactions[transactionIndex] !== 'undefined') {\n            //this.transactions[transactionIndex].errors.source = Array.from(new Set(this.transactions[transactionIndex].errors.source));\n            //this.transactions[transactionIndex].errors.destination = Array.from(new Set(this.transactions[transactionIndex].errors.destination));\n          }\n\n        }\n      }\n    },\n\n    /**\n     *\n     */\n    convertData: function () {\n      //console.log('now in convertData');\n      let data = {\n        'transactions': []\n      };\n      //console.log('Group title is: \"' + this.groupTitle + '\"');\n      if (this.groupTitle.length > 0) {\n        data.group_title = this.groupTitle;\n      }\n\n      for (let i in this.transactions) {\n        if (this.transactions.hasOwnProperty(i) && /^0$|^[1-9]\\d*$/.test(i) && i <= 4294967294) {\n          data.transactions.push(this.convertSplit(i, this.transactions[i]));\n        }\n      }\n      if (data.transactions.length > 1 && '' !== data.transactions[0].description) {\n        data.group_title = data.transactions[0].description;\n      }\n\n      // depending on the transaction type for this thing, we need to\n      // make sure other splits match the data we submit.\n      if (data.transactions.length > 1) {\n        // console.log('This is a split!');\n        data = this.synchronizeAccounts(data);\n      }\n\n      return data;\n    },\n    synchronizeAccounts: function (data) {\n      // console.log('synchronizeAccounts: ' + this.transactionType);\n      // make sure all splits have whatever is in split 0.\n      // since its a transfer we can drop the name and use ID's only.\n      for (let i in data.transactions) {\n        if (data.transactions.hasOwnProperty(i) && /^0$|^[1-9]\\d*$/.test(i) && i <= 4294967294) {\n          // console.log('now at ' + i);\n\n          // for transfers, overrule both the source and the destination:\n          if ('Transfer' === this.transactionType) {\n            data.transactions[i].source_name = null;\n            data.transactions[i].destination_name = null;\n            if (i > 0) {\n              data.transactions[i].source_id = data.transactions[0].source_id;\n              data.transactions[i].destination_id = data.transactions[0].destination_id;\n            }\n          }\n          // for deposits, overrule the destination and ignore the rest.\n          if ('Deposit' === this.transactionType) {\n            data.transactions[i].destination_name = null;\n            if (i > 0) {\n              data.transactions[i].destination_id = data.transactions[0].destination_id;\n            }\n          }\n\n          // for withdrawals, overrule the source and ignore the rest.\n          if ('Withdrawal' === this.transactionType) {\n            data.transactions[i].source_name = null;\n            if (i > 0) {\n              data.transactions[i].source_id = data.transactions[0].source_id;\n            }\n          }\n        }\n      }\n      return data;\n\n    },\n\n    switchAccounts: function (index) {\n      // console.log('user wants to switch Accounts');\n      let origSourceId = this.transactions[index].source_account_id;\n      let origSourceName = this.transactions[index].source_account_name;\n      let origSourceType = this.transactions[index].source_account_type;\n\n      let origDestId = this.transactions[index].destination_account_id;\n      let origDestName = this.transactions[index].destination_account_name;\n      let origDestType = this.transactions[index].destination_account_type;\n\n      this.updateField({index: 0, field: 'source_account_id', value: origDestId});\n      this.updateField({index: 0, field: 'source_account_name', value: origDestName});\n      this.updateField({index: 0, field: 'source_account_type', value: origDestType});\n\n      this.updateField({index: 0, field: 'destination_account_id', value: origSourceId});\n      this.updateField({index: 0, field: 'destination_account_name', value: origSourceName});\n      this.updateField({index: 0, field: 'destination_account_type', value: origSourceType});\n      this.calculateTransactionType(0);\n    },\n\n\n    /**\n     *\n     * @param key\n     * @param array\n     */\n    convertSplit: function (key, array) {\n      let dateStr = 'invalid';\n      if (\n          this.time instanceof Date && !isNaN(this.time) &&\n          this.date instanceof Date && !isNaN(this.date)\n      ) {\n        let theDate = new Date(this.date);\n        // update time in date object.\n        theDate.setHours(this.time.getHours());\n        theDate.setMinutes(this.time.getMinutes());\n        theDate.setSeconds(this.time.getSeconds());\n        dateStr = toW3CString(theDate);\n      }\n\n      // console.log('dateStr = ' + dateStr);\n\n      let currentSplit = {\n        // basic\n        description: array.description,\n        date: dateStr,\n        type: this.transactionType,\n\n        // account\n        source_id: array.source_account_id ?? null,\n        source_name: array.source_account_name ?? null,\n        destination_id: array.destination_account_id ?? null,\n        destination_name: array.destination_account_name ?? null,\n\n        // amount:\n        currency_id: array.currency_id,\n        amount: array.amount,\n\n        // meta data\n        budget_id: array.budget_id,\n        category_name: array.category,\n        tags: array.tags,\n\n        // optional date fields (6x):\n        interest_date: array.interest_date,\n        book_date: array.book_date,\n        process_date: array.process_date,\n        due_date: array.due_date,\n        payment_date: array.payment_date,\n        invoice_date: array.invoice_date,\n\n        // other optional fields:\n        internal_reference: array.internal_reference,\n        external_url: array.external_url,\n        notes: array.notes,\n        external_id: array.external_id,\n\n        // location:\n        zoom_level: array.zoom_level,\n        longitude: array.longitude,\n        latitude: array.latitude,\n\n        // from thing:\n        order: 0,\n        reconciled: false,\n      };\n      // bills and piggy banks\n      if (0 !== array.piggy_bank_id) {\n        currentSplit.piggy_bank_id = array.piggy_bank_id;\n      }\n      if (0 !== array.bill_id) {\n        currentSplit.bill_id = array.bill_id;\n      }\n\n      // foreign amount:\n      if (0 !== array.foreign_currency_id && '' !== array.foreign_amount) {\n        currentSplit.foreign_currency_id = array.foreign_currency_id;\n      }\n      if ('' !== array.foreign_amount) {\n        currentSplit.foreign_amount = array.foreign_amount;\n      }\n\n      // do transaction type\n      let transactionType;\n      let firstSource;\n      let firstDestination;\n\n      // get transaction type from first transaction\n      transactionType = this.transactionType ? this.transactionType.toLowerCase() : 'any';\n      //console.log('Transaction type is now ' + transactionType);\n      // if the transaction type is invalid, might just be that we can deduce it from\n      // the presence of a source or destination account\n      firstSource = this.transactions[0].source_account_type;\n      firstDestination = this.transactions[0].destination_account_type;\n      //console.log(this.transactions[0].source_account);\n      //console.log(this.transactions[0].destination_account);\n      //console.log('Type of first source is  ' + firstSource);\n      //console.log('Type of first destination is  ' + firstDestination);\n\n      // default to source:\n      currentSplit.currency_id = array.source_account_currency_id;\n      if ('any' === transactionType && ['asset', 'Asset account', 'Loan', 'Debt', 'Mortgage'].includes(firstSource)) {\n        transactionType = 'withdrawal';\n      }\n\n      if ('any' === transactionType && ['asset', 'Asset account', 'Loan', 'Debt', 'Mortgage'].includes(firstDestination)) {\n        transactionType = 'deposit';\n        currentSplit.currency_id = array.destination_account_currency_id;\n      }\n      currentSplit.type = transactionType;\n      //console.log('Final type is ' + transactionType);\n\n      let links = [];\n      for (let i in array.links) {\n        if (array.links.hasOwnProperty(i) && /^0$|^[1-9]\\d*$/.test(i) && i <= 4294967294) {\n          let current = array.links[i];\n          let linkTypeParts = current.link_type_id.split('-');\n          let inwardId = 'outward' === linkTypeParts[1] ? 0 : parseInt(current.transaction_journal_id);\n          let outwardId = 'inward' === linkTypeParts[1] ? 0 : parseInt(current.transaction_journal_id);\n          let newLink = {\n            link_type_id: parseInt(linkTypeParts[0]),\n            inward_id: inwardId,\n            outward_id: outwardId,\n          };\n          links.push(newLink);\n        }\n      }\n      currentSplit.links = links;\n\n      // return it.\n      return currentSplit;\n    },\n    /**\n     * Get API value.\n     */\n    getAllowedOpposingTypes: function () {\n      axios.get('./api/v1/configuration/firefly.allowed_opposing_types')\n          .then(response => {\n            this.allowedOpposingTypes = response.data.data.value;\n          });\n    },\n    /**\n     * Get API value.\n     */\n    getAccountToTransaction: function () {\n      axios.get('./api/v1/configuration/firefly.account_to_transaction')\n          .then(response => {\n            this.accountToTransaction = response.data.data.value;\n          });\n    },\n    /**\n     * This method grabs the users preferred custom transaction fields. It's used when configuring the\n     * custom date selects that will be available. It could be something the component does by itself,\n     * thereby separating concerns. This is on my list. If it changes to a per-component thing, then\n     * it should be done via the create.js Vue store because multiple components are interested in the\n     * user's custom transaction fields.\n     */\n    getCustomFields: function () {\n      axios.get('./api/v1/preferences/transaction_journal_optional_fields').then(response => {\n        this.customFields = response.data.data.attributes.data;\n      });\n    },\n    setDestinationAllowedTypes: function (value) {\n      // console.log('Create::setDestinationAllowedTypes');\n      // console.log(value);\n      if (0 === value.length) {\n        this.destinationAllowedTypes = this.defaultDestinationAllowedTypes;\n        //console.log('empty so back to defaults');\n        return;\n      }\n      this.destinationAllowedTypes = value;\n    },\n    setSourceAllowedTypes(value) {\n      // console.log('Create::setSourceAllowedTypes');\n      // console.log(value);\n      if (0 === value.length) {\n        this.sourceAllowedTypes = this.defaultSourceAllowedTypes;\n        // console.log('empty so back to defaults');\n        return;\n      }\n      this.sourceAllowedTypes = value;\n    }\n  },\n\n}\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Create.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Create.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Create.vue?vue&type=template&id=1b78c213&scoped=true&\"\nimport script from \"./Create.vue?vue&type=script&lang=js&\"\nexport * from \"./Create.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1b78c213\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('alert',{attrs:{\"message\":_vm.errorMessage,\"type\":\"danger\"}}),_vm._v(\" \"),_c('alert',{attrs:{\"message\":_vm.successMessage,\"type\":\"success\"}}),_vm._v(\" \"),_c('SplitPills',{attrs:{\"transactions\":_vm.transactions}}),_vm._v(\" \"),_c('div',{staticClass:\"tab-content\"},_vm._l((this.transactions),function(transaction,index){return _c('SplitForm',{key:index,attrs:{\"allowed-opposing-types\":_vm.allowedOpposingTypes,\"count\":_vm.transactions.length,\"custom-fields\":_vm.customFields,\"date\":_vm.date,\"destination-allowed-types\":_vm.destinationAllowedTypes,\"index\":index,\"source-allowed-types\":_vm.sourceAllowedTypes,\"submitted-transaction\":_vm.submittedTransaction,\"time\":_vm.time,\"transaction\":transaction,\"transaction-type\":_vm.transactionType},on:{\"uploaded-attachments\":function($event){return _vm.uploadedAttachment($event)},\"set-marker-location\":function($event){return _vm.storeLocation($event)},\"set-account\":function($event){return _vm.storeAccountValue($event)},\"switch-accounts\":function($event){return _vm.switchAccounts($event)},\"set-date\":function($event){return _vm.storeDate($event)},\"set-time\":function($event){return _vm.storeTime($event)},\"set-field\":function($event){return _vm.storeField($event)},\"remove-transaction\":function($event){return _vm.removeTransaction($event)},\"set-dest-types\":function($event){return _vm.setDestinationAllowedTypes($event)},\"set-src-types\":function($event){return _vm.setSourceAllowedTypes($event)}}})}),1),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12\"},[(_vm.transactions.length > 1)?_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col\"},[_c('TransactionGroupTitle',{attrs:{\"errors\":this.groupTitleErrors},on:{\"set-group-title\":function($event){return _vm.storeGroupTitle($event)}},model:{value:(this.groupTitle),callback:function ($$v) {_vm.$set(this, \"groupTitle\", $$v)},expression:\"this.groupTitle\"}})],1)])])]):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12\"},[_c('div',{staticClass:\"card card-primary\"},[_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col\"},[_c('div',{staticClass:\"text-xs d-none d-lg-block d-xl-block\"},[_vm._v(\"\\n                 \\n              \")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-outline-primary btn-block\",on:{\"click\":_vm.addTransaction}},[_c('i',{staticClass:\"far fa-clone\"}),_vm._v(\" \"+_vm._s(_vm.$t('firefly.add_another_split'))+\"\\n              \")])]),_vm._v(\" \"),_c('div',{staticClass:\"col\"},[_c('div',{staticClass:\"text-xs d-none d-lg-block d-xl-block\"},[_vm._v(\"\\n                 \\n              \")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-success btn-block\",attrs:{\"disabled\":!_vm.enableSubmit},on:{\"click\":_vm.submitTransaction}},[(_vm.enableSubmit)?_c('span',[_c('i',{staticClass:\"far fa-save\"}),_vm._v(\" \"+_vm._s(_vm.$t('firefly.store_transaction')))]):_vm._e(),_vm._v(\" \"),(!_vm.enableSubmit)?_c('span',[_c('i',{staticClass:\"fas fa-spinner fa-spin\"})]):_vm._e()])])]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col\"},[_vm._v(\"\\n               \\n            \")]),_vm._v(\" \"),_c('div',{staticClass:\"col\"},[_c('div',{staticClass:\"form-check\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.createAnother),expression:\"createAnother\"}],staticClass:\"form-check-input\",attrs:{\"id\":\"createAnother\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.createAnother)?_vm._i(_vm.createAnother,null)>-1:(_vm.createAnother)},on:{\"change\":function($event){var $$a=_vm.createAnother,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.createAnother=$$a.concat([$$v]))}else{$$i>-1&&(_vm.createAnother=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.createAnother=$$c}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"createAnother\"}},[_c('span',{staticClass:\"small\"},[_vm._v(_vm._s(_vm.$t('firefly.create_another')))])])]),_vm._v(\" \"),_c('div',{staticClass:\"form-check\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.resetFormAfter),expression:\"resetFormAfter\"}],staticClass:\"form-check-input\",attrs:{\"id\":\"resetFormAfter\",\"disabled\":!_vm.createAnother,\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.resetFormAfter)?_vm._i(_vm.resetFormAfter,null)>-1:(_vm.resetFormAfter)},on:{\"change\":function($event){var $$a=_vm.resetFormAfter,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.resetFormAfter=$$a.concat([$$v]))}else{$$i>-1&&(_vm.resetFormAfter=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.resetFormAfter=$$c}}}}),_vm._v(\" \"),_c('label',{staticClass:\"form-check-label\",attrs:{\"for\":\"resetFormAfter\"}},[_c('span',{staticClass:\"small\"},[_vm._v(_vm._s(_vm.$t('firefly.reset_after')))])])])])])])])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\n * create.js\n * Copyright (c) 2020 james@firefly-iii.org\n *\n * This file is part of Firefly III (https://github.com/firefly-iii).\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport store from \"../../components/store\";\nimport Create from \"../../components/transactions/Create\";\nimport Vue from \"vue\";\n\nrequire('../../bootstrap');\n\nVue.config.productionTip = false;\n// i18n\nlet i18n = require('../../i18n');\n\nlet props = {};\nnew Vue({\n            i18n,\n            store,\n            render(createElement) {\n                return createElement(Create, {props: props});\n            },\n            beforeCreate() {\n                this.$store.commit('initialiseStore');\n                this.$store.dispatch('updateCurrencyPreference');\n            },\n        }).$mount('#transactions_create');\n"],"sourceRoot":""}